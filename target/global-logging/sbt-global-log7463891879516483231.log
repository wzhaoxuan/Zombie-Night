[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\WONGZH~1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\WONGZH~1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 20.0.1)
[debug] Load.defaultLoad until apply took 88.4138ms
[debug]           Load.loadUnit: plugins took 71.5238ms
[debug]           Load.loadUnit: defsScala took 0.19ms
[debug] [Loading] Scanning directory C:\Users\wong zhao xuan\IdeaProjects\finalprojectv2-wzhaoxuan\project
[debug]             Load.loadUnit: mkEval took 5.9829ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\wong zhao xuan\IdeaProjects\finalprojectv2-wzhaoxuan\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.1506 ms
[info] loading settings for project finalprojectv2-wzhaoxuan-build from idea.sbt ...
[debug]               Load.resolveProject(finalprojectv2-wzhaoxuan-build) took 33.9818ms
[debug]             Load.loadTransitive: finalizeProject(Project(id finalprojectv2-wzhaoxuan-build, base: C:\Users\wong zhao xuan\IdeaProjects\finalprojectv2-wzhaoxuan\project, plugins: List(<none>))) took 62.2619ms
[debug] [Loading] Done in C:\Users\wong zhao xuan\IdeaProjects\finalprojectv2-wzhaoxuan\project, returning: (finalprojectv2-wzhaoxuan-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3048.9021ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.8509ms
[debug]         Load.loadUnit(file:/C:/Users/wong%20zhao%20xuan/IdeaProjects/finalprojectv2-wzhaoxuan/project/, ...) took 3133.2696ms
[debug]       Load.apply: load took 3253.1197ms
[debug]       Load.apply: resolveProjects took 3.7398ms
[debug]       Load.apply: finalTransforms took 59.857ms
[debug]       Load.apply: config.delegates took 7.296ms
[debug]       Load.apply: Def.make(settings)... took 574.6246ms
[debug]       Load.apply: structureIndex took 144.2073ms
[debug]       Load.apply: mkStreams took 4.6261ms
[info] loading project definition from C:\Users\wong zhao xuan\IdeaProjects\finalprojectv2-wzhaoxuan\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6161.2776ms
[debug]     Load.loadUnit: defsScala took 0.0048ms
[debug] [Loading] Scanning directory C:\Users\wong zhao xuan\IdeaProjects\finalprojectv2-wzhaoxuan
[debug]       Load.loadUnit: mkEval took 0.2831ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.9633 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 50.1907ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\wong zhao xuan\IdeaProjects\finalprojectv2-wzhaoxuan, plugins: List(<none>))) took 56.347ms
[debug] [Loading] Done in C:\Users\wong zhao xuan\IdeaProjects\finalprojectv2-wzhaoxuan, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1516.721ms
[debug]     Load.loadUnit: cleanEvalClasses took 17.4353ms
[debug]   Load.loadUnit(file:/C:/Users/wong%20zhao%20xuan/IdeaProjects/finalprojectv2-wzhaoxuan/, ...) took 7697.1097ms
[debug] Load.apply: load took 7724.2958ms
[debug] Load.apply: resolveProjects took 0.1989ms
[debug] Load.apply: finalTransforms took 40.9749ms
[debug] Load.apply: config.delegates took 0.448ms
[debug] Load.apply: Def.make(settings)... took 103.2328ms
[debug] Load.apply: structureIndex took 39.0168ms
[debug] Load.apply: mkStreams took 0.0043ms
[info] set current project to scalaFXIntro (in build file:/C:/Users/wong%20zhao%20xuan/IdeaProjects/finalprojectv2-wzhaoxuan/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61057 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61057, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scalaFXIntro (in build file:/C:/Users/wong%20zhao%20xuan/IdeaProjects/finalprojectv2-wzhaoxuan/)
[debug] > Exec(idea-shell, None, None)
